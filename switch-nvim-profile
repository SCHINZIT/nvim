#!/bin/bash

####################################################################
#
# Should help you to easy switch nvim-configuration
# This scripts links your init.vim to the corresponding
# init.vim
# Directorystructure should be:
# ~/.config/<nvimconfigname>/init.vim
# assumes you standard config in .config/nvim/config/init.vim
# 
####################################################################

if [ -z $1 ]; then
  STANDARD=1
  CONFIG="/nvim/config"
else
  CONFIG=$1
  STANDARD=0
fi

PREFIX="$HOME/.config"
POSTFIXSRC="/init.vim"
POSTFIXDST="/init.vim"
NVIM="/nvim"
NVIMCFG=$PREFIX$NVIM$POSTFIXDST
NEWNVIMCFG=$PREFIX/$CONFIG/$POSTFIXSRC

if [ $STANDARD -gt 0 ]; then
  echo -n "Resetting to standardconfig..."
  unlink $NVIMCFG
  ln -s $NEWVIMCFG $NVIMCFG
  echo -e "\tdone!"
  exit 0
fi

if [ -L $NVIMCFG ]; then
  # unlink
  echo -n "Unlinking old config $NVIMCFG..."
  unlink $NVIMCFG
  echo -e "\tdone!"
  
  # link to new 
  echo -n "Linking new config..."
  ln -s $PREFIX/$CONFIG/$POSTFIXSRC $NVIMCFG
  echo -e "\tdone!"
elif [ -f $NVIMCFG ]; then
  # warning
  echo "WARNING: Your $NVIMCFG is not a link."
  echo -n "WARNING: Gonna backup $NVIMCFG to $NVIMCFG.back...."
  # backup init.vim
  cp $NVIMCFG $NVIMCFG.back
  echo -e "\tdone!"
  # link
  echo -n "Linking new config..."
  ln -s $PREFIX/$CONFIG/$POSTFIXSRC $NVIMCFG
elif [ -d $NVIMCFG ]; then
  echo "Your $NVIMCFG seems to be a directory... "
  echo "In my world that makes no sense... so I'm gonna quit, bye."
  exit 1
else
  echo "FOUND NOTHING TO DO, SOME DEBUGINFO:"
  echo "PREFIX: $PREFIX"
  echo "POSTFIXSRC: $POSTFIXSRC"
  echo "POSTFIXDST: $POSTFIXDST"
  echo "NVIM: $NVIM"
  echo "CONFIG: $CONFIG"
  echo "NVIMCFG: $NVIMCFG"
  echo "NEWNVIMCFG: $NEWNVIMCFG"
fi


